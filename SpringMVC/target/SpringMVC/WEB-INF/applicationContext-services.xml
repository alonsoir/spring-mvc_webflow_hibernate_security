<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="com.aironman.core"
		use-default-filters="true">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="hibernatePropertiesConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:hibernate.properties" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.userName}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${database.hibernate.dialect}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.use_sql_comments=${hibernate.use_sql_comments}
				hibernate.jdbc.batch_size=${hibernate.jdbc.batch_size}
				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
				hibernate.generate_statistics=${hibernate.generate_statistics}
			</value>
		</property>
		<property name="packagesToScan" value="com.aironman.core.pojos" />
	</bean>
	<!-- el pool de hilos Mi macBook tiene dos cores, los otros valores no los 
		tengo muy claros aun. Con las pruebas de stress jmeter lo tendre mas claro -->
	<bean id="poolExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="2" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>

	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />

	<mvc:resources mapping="/resources/**" location="/public-resources/"
		cache-period="10000" />
	<bean id="accessDeniedHandler" class="com.aironman.core.configuration.MyAccessDeniedHandler">
		<property name="accessDeniedUrl" value="403" />
	</bean>
</beans>